/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package legends;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.InputStream;
import javax.swing.ImageIcon;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

/**
 *
 * @author Rafael Sim√µes
 */
public class farming extends javax.swing.JFrame {

    /**
     * Creates new form farming
     */
    static String[] mapArray = new String[4];
    
    public farming() {
        initComponents();
        
        ImageIcon legendslogo = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/legendslogo.png")));
        Image img1 = legendslogo.getImage();
        Image img2 = img1.getScaledInstance(logo.getWidth(),logo.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon logotop = new ImageIcon(img2);
        logo.setIcon(logotop);
        
        jPanel1.setVisible(false);        
         
        //make button background invisible
        redToggle.setOpaque(false);
        redToggle.setContentAreaFilled(false);
        redToggle.setBorderPainted(false);
        
        blueToggle.setOpaque(false);
        blueToggle.setContentAreaFilled(false);
        blueToggle.setBorderPainted(false);
        
        yellowToggle.setOpaque(false);
        yellowToggle.setContentAreaFilled(false);
        yellowToggle.setBorderPainted(false);
        
        purpleToggle.setOpaque(false);
        purpleToggle.setContentAreaFilled(false);
        purpleToggle.setBorderPainted(false);
        
        greenToggle.setOpaque(false);
        greenToggle.setContentAreaFilled(false);
        greenToggle.setBorderPainted(false);
              
        //button images
        //red
        ImageIcon redElem = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/elements/redElement.png")));
        Image red1 = redElem.getImage();
        Image red2 = red1.getScaledInstance(redToggle.getWidth(),redToggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon redIcon = new ImageIcon(red2);
        redToggle.setIcon(redIcon);
        
        //blue
        ImageIcon blueElem = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/elements/blueElement.png")));
        Image blue1 = blueElem.getImage();
        Image blue2 = blue1.getScaledInstance(blueToggle.getWidth(),blueToggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon blueIcon = new ImageIcon(blue2);
        blueToggle.setIcon(blueIcon);
        
        //green
        ImageIcon greenElem = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/elements/greenElement.png")));
        Image green1 = greenElem.getImage();
        Image green2 = green1.getScaledInstance(greenToggle.getWidth(),greenToggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon greenIcon = new ImageIcon(green2);
        greenToggle.setIcon(greenIcon);
        
        //yellow
        ImageIcon yellowElem = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/elements/yellowElement.png")));
        Image yellow1 = yellowElem.getImage();
        Image yellow2 = yellow1.getScaledInstance(yellowToggle.getWidth(),yellowToggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon yellowIcon = new ImageIcon(yellow2);
        yellowToggle.setIcon(yellowIcon);

        //purple
        ImageIcon purpleElem = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/elements/purpleElement.png")));
        Image purple1 = purpleElem.getImage();
        Image purple2 = purple1.getScaledInstance(purpleToggle.getWidth(),purpleToggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon purpleIcon = new ImageIcon(purple2);
        purpleToggle.setIcon(purpleIcon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        backBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rs1Toggle = new javax.swing.JToggleButton();
        rs2Toggle = new javax.swing.JToggleButton();
        ss1Toggle = new javax.swing.JToggleButton();
        rs3Toggle = new javax.swing.JToggleButton();
        ss2Toggle = new javax.swing.JToggleButton();
        ss3Toggle = new javax.swing.JToggleButton();
        greenToggle = new javax.swing.JToggleButton();
        yellowToggle = new javax.swing.JToggleButton();
        blueToggle = new javax.swing.JToggleButton();
        redToggle = new javax.swing.JToggleButton();
        purpleToggle = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        logo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        map1 = new javax.swing.JLabel();
        map2 = new javax.swing.JLabel();
        map3 = new javax.swing.JLabel();
        map4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        curPatch = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setTitle("Farming ");
        setMaximumSize(new java.awt.Dimension(450, 340));
        setMinimumSize(new java.awt.Dimension(450, 340));
        setPreferredSize(new java.awt.Dimension(450, 340));
        setResizable(false);

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        rs1Toggle.setBorder(null);
        rs1Toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs1ToggleActionPerformed(evt);
            }
        });

        rs2Toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs2ToggleActionPerformed(evt);
            }
        });

        ss1Toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ss1ToggleActionPerformed(evt);
            }
        });

        rs3Toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rs3ToggleActionPerformed(evt);
            }
        });

        ss2Toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ss2ToggleActionPerformed(evt);
            }
        });

        ss3Toggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ss3ToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rs1Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rs2Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(rs3Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ss1Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ss2Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ss3Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rs2Toggle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rs1Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ss1Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rs3Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ss2Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ss3Toggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        greenToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenToggleActionPerformed(evt);
            }
        });

        yellowToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowToggleActionPerformed(evt);
            }
        });

        blueToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueToggleActionPerformed(evt);
            }
        });

        redToggle.setMaximumSize(new java.awt.Dimension(50, 50));
        redToggle.setMinimumSize(new java.awt.Dimension(50, 50));
        redToggle.setPreferredSize(new java.awt.Dimension(50, 50));
        redToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redToggleActionPerformed(evt);
            }
        });

        purpleToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purpleToggleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logo, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
        );

        jPanel3.setVisible(false);

        map1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        map1.setText("234324234");
        map1.setAlignmentX(0.5F);
        map1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        map2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        map2.setText("234324234");
        map2.setAlignmentX(0.5F);
        map2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        map3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        map3.setText("234324234");
        map3.setAlignmentX(0.5F);
        map3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        map4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        map4.setText("234324234");
        map4.setAlignmentX(0.5F);
        map4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(map1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(map3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(map4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(map2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(map1)
                    .addComponent(map2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(map3)
                    .addComponent(map4))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel1.setText("Patch");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(375, Short.MAX_VALUE)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(redToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yellowToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(greenToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blueToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(purpleToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(curPatch))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addComponent(curPatch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(redToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(greenToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yellowToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(blueToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(purpleToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String[] farmMaps(String s)
            {
                String map[] = new String[4];
                try {
             
        InputStream in = farming.class.getResourceAsStream("/resources/xml/farmingDetails.xml");    
	//File fXmlFile = new File("src/resources/xml/farmingDetails.xml");
	DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
	DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
	Document doc = dBuilder.parse(in);
			
	doc.getDocumentElement().normalize();

	NodeList nList = doc.getElementsByTagName("soul");
	NodeList nPatch = doc.getElementsByTagName("patch");
        
        Node pNode = nPatch.item(0);
        Element pElement = (Element) pNode;
        curPatch.setText(pElement.getElementsByTagName("curPatch").item(0).getTextContent());
	for (int temp = 0; temp < nList.getLength(); temp++) {

		Node nNode = nList.item(temp);
				
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    

			Element eElement = (Element) nNode;
                    
                        
                        if(eElement.getAttribute("id").equals(s)){
                            map[0] = eElement.getElementsByTagName("map1").item(0).getTextContent();
                            map[1] = eElement.getElementsByTagName("map2").item(0).getTextContent();                       
                            map[2] = eElement.getElementsByTagName("map3").item(0).getTextContent();
                            map[3] = eElement.getElementsByTagName("map4").item(0).getTextContent();
                        }   
                }
        }              
}
                catch (Exception e) {}
	
         return map; }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        //back button
       
        this.setVisible(false);

// TODO add your handling code here:
    }//GEN-LAST:event_backBtnActionPerformed

    private void rs1ToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs1ToggleActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
          mapArray = farmMaps(rs1Toggle.getIcon().toString());
        
        for (int i = 0; i< mapArray.length;i++) {
            map1.setText(mapArray[0]);
            map2.setText(mapArray[1]);
            map3.setText(mapArray[2]);
            map4.setText(mapArray[3]);
        }
       
    }//GEN-LAST:event_rs1ToggleActionPerformed

    private void greenToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenToggleActionPerformed
        // TODO add your handling code here:
        
        jPanel1.setVisible(true);
        redToggle.setSelected(false);
        yellowToggle.setSelected(false);
        blueToggle.setSelected(false);
        purpleToggle.setSelected(false);
        rs1Toggle.setSelected(false);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
        map1.setText("");
        map2.setText("");
        map3.setText("");
        map4.setText("");
        
        ImageIcon rising1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulGreen1.png")));
        Image rs11 = rising1.getImage();
        Image rs21 = rs11.getScaledInstance(rs1Toggle.getWidth(),rs1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising1Icon = new ImageIcon(rs21,"risinggreen1");
        rs1Toggle.setIcon(rising1Icon);
        
        ImageIcon rising2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulGreen2.png")));
        Image rs12 = rising2.getImage();
        Image rs22 = rs12.getScaledInstance(rs2Toggle.getWidth(),rs2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising2Icon = new ImageIcon(rs22,"risinggreen2");
        rs2Toggle.setIcon(rising2Icon);
        
        ImageIcon rising3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulGreen3.png")));
        Image rs13 = rising3.getImage();
        Image rs23 = rs13.getScaledInstance(rs3Toggle.getWidth(),rs3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising3Icon = new ImageIcon(rs23,"risinggreen3");
        rs3Toggle.setIcon(rising3Icon);
        
        ImageIcon super1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulGreen1.png")));
        Image ss11 = super1.getImage();
        Image ss21 = ss11.getScaledInstance(ss1Toggle.getWidth(),ss1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super1Icon = new ImageIcon(ss21,"supergreen1");
        ss1Toggle.setIcon(super1Icon);
        
        ImageIcon super2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulGreen2.png")));
        Image ss12 = super2.getImage();
        Image ss22 = ss12.getScaledInstance(ss2Toggle.getWidth(),ss2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super2Icon = new ImageIcon(ss22,"supergreen2");
        ss2Toggle.setIcon(super2Icon);
        
        ImageIcon super3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulGreen3.png")));
        Image ss13 = super3.getImage();
        Image ss23 = ss13.getScaledInstance(ss3Toggle.getWidth(),ss3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super3Icon = new ImageIcon(ss23,"supergreen3");
        ss3Toggle.setIcon(super3Icon);
    }//GEN-LAST:event_greenToggleActionPerformed

    private void yellowToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowToggleActionPerformed
        // TODO add your handling code here:
    
        jPanel1.setVisible(true);
        redToggle.setSelected(false);
        greenToggle.setSelected(false);
        blueToggle.setSelected(false);
        purpleToggle.setSelected(false);
        rs1Toggle.setSelected(false);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
        map1.setText("");
        map2.setText("");
        map3.setText("");
        map4.setText("");
         
        ImageIcon rising1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulYellow1.png")));
        Image rs11 = rising1.getImage();
        Image rs21 = rs11.getScaledInstance(rs1Toggle.getWidth(),rs1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising1Icon = new ImageIcon(rs21,"risingyellow1");
        rs1Toggle.setIcon(rising1Icon);
        
        ImageIcon rising2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulYellow2.png")));
        Image rs12 = rising2.getImage();
        Image rs22 = rs12.getScaledInstance(rs2Toggle.getWidth(),rs2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising2Icon = new ImageIcon(rs22,"risingyellow2");
        rs2Toggle.setIcon(rising2Icon);
        
        ImageIcon rising3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulYellow3.png")));
        Image rs13 = rising3.getImage();
        Image rs23 = rs13.getScaledInstance(rs3Toggle.getWidth(),rs3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising3Icon = new ImageIcon(rs23,"risingyellow3");
        rs3Toggle.setIcon(rising3Icon);
        
        ImageIcon super1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulYellow1.png")));
        Image ss11 = super1.getImage();
        Image ss21 = ss11.getScaledInstance(ss1Toggle.getWidth(),ss1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super1Icon = new ImageIcon(ss21,"superyellow1");
        ss1Toggle.setIcon(super1Icon);
        
        ImageIcon super2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulYellow2.png")));
        Image ss12 = super2.getImage();
        Image ss22 = ss12.getScaledInstance(ss2Toggle.getWidth(),ss2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super2Icon = new ImageIcon(ss22,"superyellow2");
        ss2Toggle.setIcon(super2Icon);
        
        ImageIcon super3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulYellow3.png")));
        Image ss13 = super3.getImage();
        Image ss23 = ss13.getScaledInstance(ss3Toggle.getWidth(),ss3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super3Icon = new ImageIcon(ss23,"superyellow3");
        ss3Toggle.setIcon(super3Icon);
    }//GEN-LAST:event_yellowToggleActionPerformed

    private void blueToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueToggleActionPerformed
        // TODO add your handling code here:
       
        jPanel1.setVisible(true);
        redToggle.setSelected(false);
        yellowToggle.setSelected(false);
        greenToggle.setSelected(false);
        purpleToggle.setSelected(false);
        rs1Toggle.setSelected(false);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
        map1.setText("");
        map2.setText("");
        map3.setText("");
        map4.setText("");
        
        ImageIcon rising1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulBlue1.png")));
        Image rs11 = rising1.getImage();
        Image rs21 = rs11.getScaledInstance(rs1Toggle.getWidth(),rs1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising1Icon = new ImageIcon(rs21,"risingblue1");
        rs1Toggle.setIcon(rising1Icon);
        
        ImageIcon rising2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulBlue2.png")));
        Image rs12 = rising2.getImage();
        Image rs22 = rs12.getScaledInstance(rs2Toggle.getWidth(),rs2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising2Icon = new ImageIcon(rs22,"risingblue2");
        rs2Toggle.setIcon(rising2Icon);
        
        ImageIcon rising3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulBlue3.png")));
        Image rs13 = rising3.getImage();
        Image rs23 = rs13.getScaledInstance(rs3Toggle.getWidth(),rs3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising3Icon = new ImageIcon(rs23,"risingblue3");
        rs3Toggle.setIcon(rising3Icon);
        
        ImageIcon super1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulBlue1.png")));
        Image ss11 = super1.getImage();
        Image ss21 = ss11.getScaledInstance(ss1Toggle.getWidth(),ss1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super1Icon = new ImageIcon(ss21,"superblue1");
        ss1Toggle.setIcon(super1Icon);
        
        ImageIcon super2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulBlue2.png")));
        Image ss12 = super2.getImage();
        Image ss22 = ss12.getScaledInstance(ss2Toggle.getWidth(),ss2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super2Icon = new ImageIcon(ss22,"superblue2");
        ss2Toggle.setIcon(super2Icon);
        
        ImageIcon super3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulBlue3.png")));
        Image ss13 = super3.getImage();
        Image ss23 = ss13.getScaledInstance(ss3Toggle.getWidth(),ss3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super3Icon = new ImageIcon(ss23,"superblue3");
        ss3Toggle.setIcon(super3Icon);
    }//GEN-LAST:event_blueToggleActionPerformed

    private void redToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redToggleActionPerformed
        // TODO add your handling code here:
        
        jPanel1.setVisible(true);
        greenToggle.setSelected(false);
        yellowToggle.setSelected(false);
        blueToggle.setSelected(false);
        purpleToggle.setSelected(false);
        rs1Toggle.setSelected(false);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
        map1.setText("");
        map2.setText("");
        map3.setText("");
        map4.setText("");
        
        ImageIcon rising1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulRed1.png")));
        Image rs11 = rising1.getImage();
        Image rs21 = rs11.getScaledInstance(rs1Toggle.getWidth(),rs1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising1Icon = new ImageIcon(rs21,"risingred1");
        rs1Toggle.setIcon(rising1Icon);
        
        ImageIcon rising2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulRed2.png")));
        Image rs12 = rising2.getImage();
        Image rs22 = rs12.getScaledInstance(rs2Toggle.getWidth(),rs2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising2Icon = new ImageIcon(rs22,"risingred2");
        rs2Toggle.setIcon(rising2Icon);
        
        ImageIcon rising3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulRed3.png")));
        Image rs13 = rising3.getImage();
        Image rs23 = rs13.getScaledInstance(rs3Toggle.getWidth(),rs3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising3Icon = new ImageIcon(rs23,"risingred3");
        rs3Toggle.setIcon(rising3Icon);
        
        ImageIcon super1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulRed1.png")));
        Image ss11 = super1.getImage();
        Image ss21 = ss11.getScaledInstance(ss1Toggle.getWidth(),ss1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super1Icon = new ImageIcon(ss21,"superred1");
        ss1Toggle.setIcon(super1Icon);
        
        ImageIcon super2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulRed2.png")));
        Image ss12 = super2.getImage();
        Image ss22 = ss12.getScaledInstance(ss2Toggle.getWidth(),ss2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super2Icon = new ImageIcon(ss22,"superred2");
        ss2Toggle.setIcon(super2Icon);
        
        ImageIcon super3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulRed3.png")));
        Image ss13 = super3.getImage();
        Image ss23 = ss13.getScaledInstance(ss3Toggle.getWidth(),ss3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super3Icon = new ImageIcon(ss23,"superred3");
        ss3Toggle.setIcon(super3Icon);
    }//GEN-LAST:event_redToggleActionPerformed

    private void rs2ToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs2ToggleActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        rs1Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
        mapArray = farmMaps(rs2Toggle.getIcon().toString());
        
        for (int i = 0; i< mapArray.length;i++) {
            map1.setText(mapArray[0]);
            map2.setText(mapArray[1]);
            map3.setText(mapArray[2]);
            map4.setText(mapArray[3]);
        }
        
    }//GEN-LAST:event_rs2ToggleActionPerformed

    private void ss1ToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ss1ToggleActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        rs1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
     mapArray = farmMaps(ss1Toggle.getIcon().toString());
        
        for (int i = 0; i< mapArray.length;i++) {
            map1.setText(mapArray[0]);
            map2.setText(mapArray[1]);
            map3.setText(mapArray[2]);
            map4.setText(mapArray[3]);
        }
    }//GEN-LAST:event_ss1ToggleActionPerformed

    private void rs3ToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rs3ToggleActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        rs2Toggle.setSelected(false);
        rs1Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false); 
        
        mapArray = farmMaps(rs3Toggle.getIcon().toString());
        
        for (int i = 0; i< mapArray.length;i++) {
            map1.setText(mapArray[0]);
            map2.setText(mapArray[1]);
            map3.setText(mapArray[2]);
            map4.setText(mapArray[3]);
        }
    }//GEN-LAST:event_rs3ToggleActionPerformed

    private void ss2ToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ss2ToggleActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        rs1Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
         mapArray = farmMaps(ss2Toggle.getIcon().toString());
        
        for (int i = 0; i< mapArray.length;i++) {
            map1.setText(mapArray[0]);
            map2.setText(mapArray[1]);
            map3.setText(mapArray[2]);
            map4.setText(mapArray[3]);
        }
   
    }//GEN-LAST:event_ss2ToggleActionPerformed

    private void ss3ToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ss3ToggleActionPerformed
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        
         mapArray = farmMaps(ss3Toggle.getIcon().toString());
        
        for (int i = 0; i< mapArray.length;i++) {
            map1.setText(mapArray[0]);
            map2.setText(mapArray[1]);
            map3.setText(mapArray[2]);
            map4.setText(mapArray[3]);
        }
    }//GEN-LAST:event_ss3ToggleActionPerformed

    private void purpleToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purpleToggleActionPerformed
        // TODO add your handling code here:
        jPanel1.setVisible(true);
        redToggle.setSelected(false);
        yellowToggle.setSelected(false);
        blueToggle.setSelected(false);
        greenToggle.setSelected(false);
        rs1Toggle.setSelected(false);
        rs2Toggle.setSelected(false);
        rs3Toggle.setSelected(false);
        ss1Toggle.setSelected(false);
        ss2Toggle.setSelected(false);
        ss3Toggle.setSelected(false);
        
        map1.setText("");
        map2.setText("");
        map3.setText("");
        map4.setText("");
        
        ImageIcon rising1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulPurple1.png")));
        Image rs11 = rising1.getImage();
        Image rs21 = rs11.getScaledInstance(rs1Toggle.getWidth(),rs1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising1Icon = new ImageIcon(rs21,"risingpurple1");
        rs1Toggle.setIcon(rising1Icon);
        
        ImageIcon rising2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulPurple2.png")));
        Image rs12 = rising2.getImage();
        Image rs22 = rs12.getScaledInstance(rs2Toggle.getWidth(),rs2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising2Icon = new ImageIcon(rs22,"risingpurple2");
        rs2Toggle.setIcon(rising2Icon);
        
        ImageIcon rising3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/RisingSoulPurple3.png")));
        Image rs13 = rising3.getImage();
        Image rs23 = rs13.getScaledInstance(rs3Toggle.getWidth(),rs3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon rising3Icon = new ImageIcon(rs23,"risingpurple3");
        rs3Toggle.setIcon(rising3Icon);
        
        ImageIcon super1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulPurple1.png")));
        Image ss11 = super1.getImage();
        Image ss21 = ss11.getScaledInstance(ss1Toggle.getWidth(),ss1Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super1Icon = new ImageIcon(ss21,"superpurple1");
        ss1Toggle.setIcon(super1Icon);
        
        ImageIcon super2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulPurple2.png")));
        Image ss12 = super2.getImage();
        Image ss22 = ss12.getScaledInstance(ss2Toggle.getWidth(),ss2Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super2Icon = new ImageIcon(ss22,"superpurple2");
        ss2Toggle.setIcon(super2Icon);
        
        ImageIcon super3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/souls/SuperSoulPurple3.png")));
        Image ss13 = super3.getImage();
        Image ss23 = ss13.getScaledInstance(ss3Toggle.getWidth(),ss3Toggle.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon super3Icon = new ImageIcon(ss23,"superpurple3");
        ss3Toggle.setIcon(super3Icon);
    }//GEN-LAST:event_purpleToggleActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JToggleButton blueToggle;
    private javax.swing.JLabel curPatch;
    private javax.swing.JToggleButton greenToggle;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel map1;
    private javax.swing.JLabel map2;
    private javax.swing.JLabel map3;
    private javax.swing.JLabel map4;
    private javax.swing.JToggleButton purpleToggle;
    private javax.swing.JToggleButton redToggle;
    private javax.swing.JToggleButton rs1Toggle;
    private javax.swing.JToggleButton rs2Toggle;
    private javax.swing.JToggleButton rs3Toggle;
    private javax.swing.JToggleButton ss1Toggle;
    private javax.swing.JToggleButton ss2Toggle;
    private javax.swing.JToggleButton ss3Toggle;
    private javax.swing.JToggleButton yellowToggle;
    // End of variables declaration//GEN-END:variables
}
