/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package legends;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;


/**
 *
 * @author Rafael Sim√µes
 */
@SuppressWarnings("serial")
public class character extends javax.swing.JFrame {

    /**
     * Creates new form character
     */
    
    public character() throws IOException {
    initComponents();
    
    JPanel panel = new JPanel();
    panel.setSize(444, 346);
    this.add(panel);
    runPanel(panel);   
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setTitle("Characters");
        setMaximumSize(new java.awt.Dimension(200, 200));
        setResizable(false);
        setSize(new java.awt.Dimension(444, 346));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 346, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
          /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(character.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(character.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(character.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(character.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new character().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(character.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    public void runPanel(JPanel panel) throws IOException{
       
try {

	InputStream inCharSouls = details.class.getResourceAsStream("/resources/xml/CharacterDetails.xml");
	DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
	DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
	Document docChar = dBuilder.parse(inCharSouls);
			
	docChar.getDocumentElement().normalize();

	NodeList nList = docChar.getElementsByTagName("char");
			int totalChar = nList.getLength();
	for (int i = 0, temp = totalChar; i<temp; i++) {

		Node nNode = nList.item(i);
                				
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    
			Element eElement = (Element) nNode;
                        
                            JButton charBtn = new JButton();
                            charBtn.setSize(70, 70);
                            charBtn.setName(eElement.getAttribute("id"));
                            charBtn.setVisible(true);
                            panel.add(charBtn);
                            panel.revalidate();
                            panel.repaint();
                            String charName = charBtn.getName();
                            charBtn.setOpaque(false);
                            charBtn.setContentAreaFilled(false);
                            charBtn.setBorderPainted(false);
           
                            ImageIcon charSoul = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/resources/charsouls/"+charName)));
                            Image char1 = charSoul.getImage();
                            Image char2 = char1.getScaledInstance(charBtn.getWidth(),charBtn.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon charIcon = new ImageIcon(char2);           
                            charBtn.setIcon(charIcon);
                            charBtn.addMouseListener(new MouseAdapter() {

                @Override
                public void mousePressed(MouseEvent e)
                {
                    String charNameDetails[] = new String[1];
                    charNameDetails[0] = charName;
                    details.main(charNameDetails);               
                }
                
                });
                        }
                }
        }

                        catch (Exception e) {}
     
    }}    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
        
    

